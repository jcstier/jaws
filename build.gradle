buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.6.RELEASE")
    }
}


ext.projectIds = ['group': 'co.riverrunners.jaws', 'version': '1.0']

group = projectIds.group
version = projectIds.version

/**
 * Generic config for all projects
 */
subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'


    sourceCompatibility = 1.8
    group = projectIds.group
    version = projectIds.version

    repositories {
        mavenCentral()
    }

}

project(':jaws-rc') {
    apply plugin: 'spring-boot'

    dependencies {
        // boot setup using jetty
        compile("org.springframework.boot:spring-boot-starter-web") {
            exclude module: "spring-boot-starter-tomcat"
        }
        compile("org.springframework.boot:spring-boot-starter-jetty")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.boot:spring-boot-starter-thymeleaf")
        compile("org.springframework:spring-jms")
        compile("org.apache.activemq:activemq-broker")
        compile project(':jaws-model')
        compile project(':jaws-es')

        //testing
        testCompile("org.springframework.boot:spring-boot-starter-test")
    }
}


project(':jaws-central') {
    apply plugin: 'spring-boot'

    dependencies {
        // boot setup using jetty
        compile("org.springframework.boot:spring-boot-starter-web") {
            exclude module: "spring-boot-starter-tomcat"
        }
        compile("org.springframework.boot:spring-boot-starter-jetty")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.boot:spring-boot-starter-thymeleaf")
        compile("org.springframework:spring-jms")
        compile("org.apache.activemq:activemq-broker")
        compile project(':jaws-model')
        compile project(':jaws-es')

        //testing
        testCompile("org.springframework.boot:spring-boot-starter-test")
    }
}

project(':jaws-model') {

    dependencies {
    }
}

project(':jaws-es') {

    dependencies {
        compile("org.springframework.data:spring-data-elasticsearch:1.0.0.RELEASE")
        compile project(':jaws-model')

        //testing
        testCompile ("junit:junit:4.11")
        testCompile ("ch.qos.logback:logback-classic:1.1.2")
    }
}

// TODO: Need to figure out how to make zip distribution which only contains central and rc.
task dist(type: Zip) {
//    from jar.output.files
}